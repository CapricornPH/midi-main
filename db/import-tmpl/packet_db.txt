// Client<->Map Packet Database
//
// Structure of Database:
// PacketType,PacketLength[,Name,FieldIndex1:FieldIndex2:FieldIndex3:...]
//
// 01. PacketType       ID of the packet.
// 02. PacketLength     Length of the packet. If 0, packet is disabled in current packet version. If -1, packet has variable size.
// 03. Name             Name of the packet parser function (optional, for incoming packets only).
// 04. FieldIndex       Specifies the offset of a packet field in bytes from the begin of the packet (only specified when Name is given).
//                      Can be 0, when the layout is not known.
// ...
//
// NOTE: Up to MAX_PACKET_POS (typically 20) field indexes may be used.
//
// The packet database allows you to add support for new clients,
// because packets change every release.
//
// Note: Every packet version needs a wanttoconnection specification, since
// that is the packet used to identify a client's version.
// If multiple versions have the same connection packet, the higher version
// will be used (unless the lower one is specified as the default)
//
// Incoming packets have their parser function and layout specified, which enables
// them for the current and all higher versions, unless explicitely disabled.
//
// Outgoing packets must be specified in order to enable them for the current
// and all higher versions, unless explicitely disabled. Packets that are not
// enabled for a packet version are silently discarded when sent as multicast.
//
// Every packet version inherits packet definitions from the previous (lower)
// packet version.
//
// Main packet version of the DB to use (default = max available version)
// Client detection is faster when all clients use this version.
// Version 23 is the latest Sakexe (above versions are for Renewal clients)
packet_db_ver: 30
//2012-04-10aRagexe
packet_ver: 30
packet_keys: 0x0E114718,0x1A77DDD5,0x28386B02 /* RagnaShield Packets*/
0x01fd,15,repairitem,2:4:6:7:9:11:13
0x089c,26,friendslistadd,2
0x0885,5,hommenu,2:4
0x0961,36,storagepassword,2:4:20
0x0288,-1,cashshopbuy,2:4:8:10
0x091c,26,partyinvite2,2
0x094b,19,wanttoconnection,2:6:10:14:18
0x0369,7,actionrequest,2:6
0x083c,10,useskilltoid,2:4:6
0x0439,8,useitem,2:4
0x0945,-1,itemlistwindowselected,2:4:8:12
0x0815,-1,reqopenbuyingstore,2:4:8:9:89
0x0817,2,reqclosebuyingstore,0
0x0360,6,reqclickbuyingstore,2
0x0811,-1,reqtradebuyingstore,2:4:8:12
0x0819,-1,searchstoreinfo,2:4:5:9:13:14:15
0x0835,2,searchstoreinfonextpage,0
0x0838,12,searchstoreinfolistitemclick,2:6:10
0x0437,5,walktoxy,2
0x0886,6,ticksend,2
0x0871,5,changedir,2:4
0x0938,6,takeitem,2
0x0891,6,dropitem,2:4
0x086c,8,movetokafra,2:4
0x08a6,8,movefromkafra,2:4
0x0438,10,useskilltopos,2:4:6:8
0x0366,90,useskilltoposinfo,2:4:6:8:10
0x0889,6,getcharnamerequest,2
0x0884,6,solvecharname,2
0x08e6,4
0x08e7,10,bookingsearchreq,2:4:6:8:12
0x08e8,-1
0x08e9,2,bookingdelreq,0
0x08ea,4
0x08eb,39,bookingupdatereq,2
0x08ec,73
0x08ed,43
0x08ee,6
0x08ef,6,bookingignorereq,2
0x08f0,6
0x08f1,6,bookingjoinpartyreq,2
0x08f2,36
0x08f3,-1
0x08f4,6
0x08f5,-1,bookingsummonmember,2:4
0x08f6,22
0x08f7,3
0x08f8,7
0x08f9,6
0x08fa,6
0x08fb,6,bookingcanceljoinparty,2
0x0907,5,moveitem,2:4
0x0908,5
0x08d7,28,battlegroundreg,2:4
0x0977,14 //Monster HP Bar
0x0916,26,guildinvite2,2
0x091d,41,bookingregreq,2:4:6
0x08cb,10,ZC_PERSONAL_INFOMATION,2:4:6:8:10:11:13:15 //Still need further information
// Merge Item
0x096D,-1,ZC_MERGE_ITEM_OPEN,2:4 // ZC_MERGE_ITEM_OPEN
0x096E,-1,mergeitem_req,2:4 // CZ_REQ_MERGE_ITEM
0x096F,7,ZC_ACK_MERGE_ITEM,2:4:6 // ZC_ACK_MERGE_ITEM
0x0974,2,mergeitem_cancel,0 // CZ_CANCEL_MERGE_ITEM
// New cashshop
0x0844,2,cashshopopen,0
0x084a,2,cashshopclose,0
0x08c9,2,cashshopitemlist,0
0x0848,-1,cashshopbuy,2:4:6:10
